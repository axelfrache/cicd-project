name: CI

on:
  push:
    branches:
      - '**'
    paths-ignore:
      - '**/README.md'
      - '**/*.md'
      - 'docs/**'
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'
  pull_request:
    branches:
      - main
    paths-ignore:
      - '**/README.md'
      - '**/*.md'
      - 'docs/**'

jobs:
  verify:
    name: Verify Code
    runs-on: ubuntu-latest
    steps:
      - name: Clone repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'maven'

      - name: Cache ktlint
        id: cache-ktlint
        uses: actions/cache@v3
        with:
          path: ./ktlint
          key: ${{ runner.os }}-ktlint-1.0.1

      - name: Download ktlint
        if: steps.cache-ktlint.outputs.cache-hit != 'true'
        run: |
          curl -sSLO https://github.com/pinterest/ktlint/releases/download/1.0.1/ktlint
          chmod a+x ktlint

      - name: Run ktlint
        run: |
          ./ktlint "src/**/*.kt" || {
            echo "Des erreurs de style ont été trouvées."
            exit 1
          }

      - name: Run tests with Maven
        run: mvn test -B -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn

  build:
    name: Build and Push Docker Image
    needs: verify
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
      actions: read

    steps:
      - name: Clone repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 1  # Optimisation: récupère uniquement le dernier commit

      - name: Extract version from tag
        id: get_version
        run: |
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
          else
            echo "VERSION=latest" >> $GITHUB_OUTPUT
          fi

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/city-api:${{ steps.get_version.outputs.VERSION }}
            ${{ secrets.DOCKERHUB_USERNAME }}/city-api:latest
          platforms: linux/amd64
          provenance: false
          builder: ${{ steps.buildx.outputs.name }}

      - name: Scan for vulnerabilities
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ secrets.DOCKERHUB_USERNAME }}/city-api:${{ steps.get_version.outputs.VERSION }}
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH'
          exit-code: '1'
          cache: true
          timeout: '5m'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-results.sarif'